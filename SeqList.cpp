// Г╨©Ф─╖Х║╗Г └И║╨Е╨▐Х║╗Г╓╨ 

#include <iostream>
using namespace std;
// Х║╗Г └Е┬²Е╖▀И∙©Е╨╕ 
#define InitSize 100

//Х║╗Д╦╜Ф∙╟Ф█╝Г╠╩Е·▀ 
typedef int ElementType;

typedef struct {
	ElementType *data; // Е┼╗Ф─│Е┬├И┘█Ф∙╟Г╩└И∙©Е╨╕ 
	int length; // Х║╗Д╦╜Ф∙╟Ф█╝Д╦╙Ф∙╟ 
}SeqList;

// Е┬²Е╖▀Е▄√И║╨Е╨▐Х║╗ 
bool InitList(SeqList &l){
	l.data = new ElementType[InitSize];
	if(!l.data)
		return false;
	l.length = 0;
	return true;
}

// Е░▒И║╨Е╨▐Х║╗Д╦╜Ф▐▓Е─╪ 
bool InsertToList(SeqList &l, int i, ElementType e){
	// iД╦█Г╛╕Е░┬Х▄┐Е⌡╢ 
	if(i < 1 || i > l.length + 1){
		return false;
	}
	// И║╨Е╨▐Х║╗Е╥╡Г╩▐Ф╩║Д╨├,Д╦█Х┐╫Ф▌╔Г²─Ф▐▓Е┘╔ 
	if(l.length >= InitSize){
		return false;
	}
	// Д╩▌И║╨Е╨▐Х║╗Г └Ф°─Е░▌Д╦─Д╦╙Д╫█Г╫╝Е╬─Е░▌Г╖╩О╪▄Г⌡╢Е┬╟iД╫█Г╫╝ 
	for(int j = l.length; j >= i; j--){
		l.data[j] = l.data[j-1];
	}
	l.data[i - 1] = e; // Ф▐▓Е┘╔Г╛╛Д╨▄Д╦╙Д╫█Г╫╝О╪▄Ф∙╟Г╩└Д╦╜Е╞╧Е╨■Г └Ф≤╞Д╦▀Ф═┤ 1 ; 
	l.length++; // Х╝╟Е╬≈Е┼═И∙©Е╨╕ 
	return true; 
}

bool DeleteList(SeqList &l, int i, ElementType &e){
	// iД╦█Г╛╕Е░┬Х▄┐Е⌡╢ 
	if(i < 1 || i > l.length){
		return false;
	}
	// И║╨Е╨▐Х║╗Д╦╨Г╘╨Г └О╪▄Д╦█Х┐╫Е┬═И≥╓
	if(l.length <= 0){
		return false;
	} 
	//Г■╗ e Х©■Е⌡·Е┬═И≥╓Г └Е─╪ 
	e = l.data[i - 1];
	// Д╩▌Е┬═И≥╓Г └Д╫█Г╫╝Е╪─Е╖▀О╪▄Е░▌И²╒Г └Ф╞▐Д╦─Д╦╙Е┘┐Г╢═Е░▒Е┴█Г╖╩Д╦─Д╫█О╪⌡ 
	for(int j = i - 1; j < l.length; j++){
		l.data[j] = l.data[j + 1];
	}
	l.length--;
	return true;
} 

// Ф▄┴Д╫█Ф÷╔Ф┴╬ 
bool GetElementByLocate(SeqList &l, int i, ElementType &e){
	if(i < 1 || i > l.length){
		return false;
	}
	// И║╨Е╨▐Х║╗Д╦╨Г╘╨Г └О╪▄Д╦█Х┐╫Е▐√Е─╪ 
	if(l.length <= 0){
		return false;
	}
	e = l.data[i - 1];
	return true; 
}

// Ф▄┴Е─╪Ф÷╔Ф┴╬ 
bool GetElementByValue(SeqList &l, ElementType e, int &i){
	for(int j = 0; j < l.length; j++){
		if(e == l.data[j]){
			i = j + 1;
			return true;
		}
	}
	return false;
}

// И│█Е▌├
void TraverseSeqList(SeqList &l){
	for(int i = 0; i < l.length; i++){
		cout << l.data[i] << " ";
	}
	cout << endl;
} 
/*
int main(){
	SeqList l;
	
	InitList(l);
	TraverseSeqList(l);
	
	int num[10] = {1,2,3,4,5,6};
	for(int i = 0; i < 10; i++){
		InsertToList(l, i + 1, num[i]);	
	}
	TraverseSeqList(l);
	
	int deleteValue;
	bool f = DeleteList(l, 2, deleteValue);
	cout << f << " "<< deleteValue << endl;
	TraverseSeqList(l);
	
	bool f1 = DeleteList(l, 11, deleteValue);
	cout << f1 << " "<< deleteValue << endl;
	
	int e;
	bool f2 = GetElementByLocate(l, 9, e);
	cout << f2 << " " << e << endl;
	
	cout << GetElementByLocate(l, 11, e) << endl;
	
	int i;
	bool f3 = GetElementByValue(l, 3, i);
	cout << f3 << " " << i << endl;
	
	cout << GetElementByValue(l, 9, i) << endl;
	
	return 0;
} */

/*
 * 1. Д╩▌И║╨Е╨▐Х║╗Д╦╜Е┬═И≥╓Е┘╥Ф°┴Ф°─Е╟▐Е─╪Г └Е┘┐Г╢═О╪┬Е│┤Х╝╬Е■╞Д╦─О╪┴Е╧╤Г■╠Е┤╫Ф∙╟Х©■Е⌡·Х╒╚Е┬═И≥╓Е┘┐Г╢═Г └Е─╪
 * Г╘╨Е┤╨Г └Д╫█Г╫╝Г■╠Ф°─Е░▌Д╦─Д╦╙Е┘┐Г╢═Е║╚Х║╔О╪▄Х▀╔И║╨Е╨▐Х║╗Д╦╨Г╘╨Е┬≥Ф≤╬Г╓╨Е┤╨И■≥Д©║Ф│╞Е╧╤И──Е┤╨Х©░Х║▄Ц─┌ 
 */
bool deleteMinValue(SeqList &l, ElementType &e){
	if(l.length == 0){
		cout << "The SeqList Is Empty!" << endl;
		return false;
	}
	e = l.data[0];
	int min_index = 0;
	for(int i = 0; i < l.length; i++){
		if(l.data[i] < e){
			e = l.data[i];
			min_index = i;
		}	
	}
	l.data[min_index] = l.data[l.length - 1];
	l.length--;
	return true;
} 

/*
 * 2. Х╝╬Х╝║Д╦─Д╦╙И╚≤Ф∙┬Г╝≈ФЁ∙О╪▄Е╟├И║╨Е╨▐Х║╗LГ └Ф┴─Ф°┴Е┘┐Г╢═И─├Г╫╝О╪▄Х╕│Ф╠┌Г╝≈ФЁ∙Г └Г╘╨И≈╢Е╓█Ф²┌Е╨╕Д╦╨O(1). 
 */ 
void reverseSeqList(SeqList &l){
	ElementType temp;
	for(int i = 0; i < l.length / 2; i++){
		temp = l.data[i];
		l.data[i] = l.data[l.length - i - 1];
		l.data[l.length - i - 1] = temp;	
	}
} 

/*
 * 3. Е╞╧И∙©Е╨╕Д╦╨nГ └И║╨Е╨▐Х║╗LО╪▄Г╪√Е├≥Д╦─Д╦╙Ф≈╤И≈╢Е╓█Ф²┌Е╨╕Д╦╨O(n)Ц─│Г╘╨И≈╢Е╓█Ф²┌Е╨╕Д╦╨O(1)Г └Г╝≈ФЁ∙О╪▄
 *    Х╞╔Г╝≈ФЁ∙Е┬═И≥╓Г╨©Ф─╖Х║╗Д╦╜Ф┴─Ф°┴Е─╪Д╦╨xГ └Ф∙╟Ф█╝Е┘┐Г╢═Ц─┌ 
 */ 
void delAllX_1(SeqList &l, ElementType x){
	int k = 0; // Х╝╟Е╫∙И║╨Е╨▐Х║╗Д╦╜Г╜┴Д╨▌xГ └Ф∙╟Г └Д╦╙Ф∙╟;
	
	for(int i = 0; i < l.length; i++){
		if(l.data[i] == x) // И│┤Е┬╟Г╜┴Д╨▌kГ └О╪▄k++О╪▄Г└╤Е░▌Г╩╖Г╩╜Е╬─Е░▌Х╣╟ 
			k++;
		else{
			l.data[i-k] = l.data[i]; // И│┤Е┬╟Д╦█Г╜┴Д╨▌kГ └О╪▄Е░▒Е┴█Г╖╩Е┼╗kД╫█; 
		}
	}
	l.length -= k; // Ф°─Е░▌Ф∙╢Д╫⌠И∙©Е╨╕-k; 
} 

void delAllX_2(SeqList &l, ElementType x){
	int k = 0; // Х╝╟Е╫∙И║╨Е╨▐Х║╗Д╦╜Д╦█Г╜┴Д╨▌xГ └Ф∙╟Г └Д╦╙Ф∙╟;
	int i = 0;
	while(i < l.length){
		if(l.data[i] != x){
			l.data[k] = l.data[i];
			k++;
		}
	} 
	l.length = k;
}

/*
 * 4 and 5. Д╩▌И║╨Е╨▐Х║╗Д╦╜Е┬═И≥╓Е┘╤Е─╪Е°╗Г╩≥Е╝  s Е▓▄ t Д╧▀И≈╢О╪┬Х╕│Ф╠┌ s < tО╪┴Г └Ф┴─Ф°┴Е┘┐Г╢═О╪▄
 *    Е╕┌Ф·° s Ф┬√ t Д╦█Е░┬Г░├Ф┬√И║╨Е╨▐Х║╗Д╦╨Г╘╨О╪▄Е┬≥Ф≤╬Г╓╨Е┤╨И■≥Д©║Ф│╞Е╧╤И──Е┤╨Х©░Х║▄Ц─┌  
 *
   4. Г▌▀И│⌠Х─┐Г═■2021Д╧╕Д╦┼И²╒Г └Г╜■Ф║┬О╪▄Е╞╧Д╨▌И║╨Е╨▐Х║╗Е│┤Е╕┌Ф≤╞И─├Е╨▐Е╟╠Ф≈═ФЁ∙Е┬═И≥╓Ц─┌emmmЕ╔╫Е┐▐Г╜■Ф║┬И┐╫Ф≤╞Ф▄┴И║╨Е╨▐Е╓└Г░├Г └Ц─┌Ц─┌Ц─┌ 
      Е⌡═Ф╜╓Ф°─Е╔╫Д╦█Г■╗Е▌╩Ф┴╬Х©≥Д╦─Д╦╙Е▄╨И≈╢О╪▄Г⌡╢Ф▌╔И│█Е▌├Е▌╩Г╖╩Е┼╗Ф╞▐Д╦─Д╦╙Е┘┐Г╢═Е╟╠Х║▄О╪▄Ф≈╤И≈╢Е╓█Ф²┌Е╨╕Д╦┼Х©≤Х╕│Ф⌡╢Е┼═Е©╚О╪⌡ 
bool Del_s_t(SeqList &l, ElementType s, ElementType t){
	int i, j;
	if(s >= t || l.length == 0){
		return false;
	}
	for(i = 0; i < l.length && l.data[i] < s; i++);
	if(i >= l.length)
		return false;
	for(j = i; j < l.length && l.data[j] <= t; j++);
	for(;j < l.length; i++,j++)
		l.data[i] = l.data[j];
		l.length = i;
		return true;
}
*/
bool Del_s_t(SeqList &l, ElementType s, ElementType t){
	if(s >= t){
		cout << " s >= t" << endl;
		return false;
	}
	if(l.length ==  0){
		cout << "The SeqList Is Empty." << endl;
		return false;
	}
	
	int k = 0; // Х╝╟Е╫∙И║╨Е╨▐Х║╗Д╦╜Е°╗ s Е┬╟ t Е▄╨И≈╢Д╦┼Г └Ф∙╟;
	for(int i = 0; i < l.length; i++){
		if(l.data[i] >= s && l.data[i] <= t){
			k++;
		} else {
			l.data[i - k] = l.data[i]; // Д╦█Ф≤╞Х╞╔Е▄╨И≈╢Г └Ф∙╟Г⌡╢Ф▌╔Е░▒Е┴█Г╖╩ k Д╫█ 
		}
	} 
	l.length -= k;
	return true;  
}

/*
 * 6. Д╩▌Ф°┴Е╨▐И║╨Е╨▐Х║╗Д╦╜Е┬═И≥╓Ф┴─Ф°┴Е┘╤Е─╪И┤█Е╓█Г └Е┘┐Г╢═О╪▄Д╫©Х║╗Д╦╜Ф┴─Ф°┴Е┘┐Г╢═Г └Е─╪Е²┤Д╦█Е░▄Ц─┌ 
 */
void delRepeatValue(SeqList &l){
	int k = 0; // Х╝╟Е╫∙И║╨Е╨▐Х║╗Д╦╜Д╦█И┤█Е╓█Е┘┐Г╢═Г └Д╦╙Ф∙╟ 
	
	// Г╛╛Д╦─Д╦╙Е╪─Е╖▀Д╦█И┤█Е╓█ 
	for(int i = 1; i < l.length; i++){
		// Е⌡═Д╦╨Ф≤╞Ф°┴Е╨▐Г └О╪▄Д╦▌Д╦█И┤█Е╓█Е▄╨Г └Ф°─Е░▌Д╦─Д╦╙Ф╞■Х╬┐Е█ЁЕ▐╞ 
		if(l.data[i] != l.data[k]){
			k++; //  Д╦█И┤█Е╓█Г └Е┘┐Г╢═Ф▐▓Е┘╔Е┬╟Ф°─Е░▌ 
			l.data[k] = l.data[i];
		}
	}
	l.length = k + 1; 
}

/*
 * 7. Е╟├Д╦╓Д╦╙Ф°┴Е╨▐О╪┬Д╩▌Е╟▐Е┬╟Е╓╖О╪┴И║╨Е╨▐Х║╗Е░┬Е╧╤Д╦╨Д╦─Д╦╙Ф√╟Г └Ф°┴Е╨▐О╪┬Д╩▌Е╟▐Е┬╟Е╓╖О╪┴И║╨Е╨▐Х║╗О╪▄Е╧╤Г■╠Е┤╫Ф∙╟Х©■Е⌡·Г╩⌠Ф·°И║╨Е╨▐Х║╗Ц─┌ 
 */ 
bool mergeSeqList(SeqList l1, SeqList l2, SeqList &l){
	if(l1.length + l2.length > l.length){
 		cout << "The SeqList can't contain so many items." << endl;
		return false;	
	}
	
	int i = 0; // Ф▄┤Е░▒Г╛╛Д╦─Д╦╙И║╨Е╨▐Х║╗ l1О╪⌡ 
	int j = 0; // Ф▄┤Е░▒Г╛╛Д╨▄Д╦╙И║╨Е╨▐Х║╗ l2О╪⌡
	int k = 0; // Ф▄┤Е░▒Е░┬Е╧╤Е░▌Г └И║╨Е╨▐Х║╗ lО╪⌡
	while(i < l1.length && j < l2.length){
		// Х╟│Е╟▐Е╟╠Е┘┬Ф┼┼Х╟│Ф▐▓Е┘╔Ф√╟Г └И║╨Е╨▐Х║╗ 
		if(l1.data[i] < l2.data[j]){
			l.data[k++] = l1.data[i++];
		} else {
			l.data[k++] = l2.data[j++];
		}
	} 
	
	// Е╟├Е┴╘Д╫≥Г └Ф▐▓Е┘╔ 
	while(i < l1.length){
		l.data[k++] = l1.data[i++];
	}
	while(j < l2.length){
		l.data[k++] = l2.data[j++];
	}
	l.length = k; 
	return true;
}  

/*
 * 8. Е╥╡Г÷╔Е°╗Д╦─Г╩╢Ф∙╟Г╩└A[m+n]Д╦╜Д╬²Ф╛║Е╜≤Ф■╬Д╦╓Д╦╙Г╨©Ф─╖Х║╗(a1,a2,a3,...,am)Е▓▄(b1,b2,b3,...,bn)Ц─┌
 * Х╞∙Г╪√Е├≥Д╦─Д╦╙Е┤╫Ф∙╟О╪▄Е╟├Ф∙╟Г╩└Д╦╜Д╦╓Д╦╙И║╨Е╨▐Х║╗Г └Д╫█Г╫╝Д╨▓Ф█╒О╪▄Е█ЁЕ╟├(b1,b2,b3,...,bn)Ф■╬Е°╗ (a1,a2,a3,...,am)Г └Е┴█И²╒Ц─┌ 
 */
void traverseSeqList(ElementType array[], int start, int end){
	for(int i = start, j = end; i < j; i++, j--){
		ElementType temp = array[i];
		array[i] = array[j];
		array[j] = temp;
	}
}

void swapSeqList(ElementType array[], int m, int n){
	traverseSeqList(array, 0, m + n - 1);
	traverseSeqList(array, 0, n - 1);
	traverseSeqList(array, n, n + m - 1);
}

/*
 * 9. Г╨©Ф─╖Х║╗(a1,a2,a3,...,an)Д╦╜Г └Е┘┐Г╢═И─▓Е╒·Ф°┴Е╨▐Д╦■Ф▄┴И║╨Е╨▐Е╜≤Е┌╗Д╨▌Х╝║Г╝≈Ф°╨Е├┘Ц─┌
 *    Е╝▄Ф┬░Г■╗Ф°─Е╟▒Ф≈╤И≈╢Е°╗Х║╗Д╦╜Ф÷╔Ф┴╬Ф∙╟Е─╪Д╦╨ x Г └Е┘┐Г╢═О╪▄Х▀╔Ф┴╬Е┬╟Е┬≥Е╟├Е┘╤Д╦▌Е░▌Г╩╖Е┘┐Г╢═Д╫█Г╫╝Г⌡╦Д╨╓Ф█╒О╪▄
 *    Х▀╔Ф┴╬Д╦█Е┬╟Е┬≥Е╟├Е┘╤Ф▐▓Е┘╔Х║╗Д╦╜Е╧╤Д╫©Х║╗Д╦╜Е┘┐Г╢═Д╩█И─▓Е╒·Ф°┴Е╨▐Ц─┌ 
 */
void findX(SeqList &l, ElementType e){
	// Д╨▄Е┬├ФЁ∙Ф÷╔Ф┴╬ 
	int left = 0;
	int right = l.length - 1;
	int mid;
	while(left <= right){
		mid = (right + left) / 2;
		
		// Е╕┌Ф·°Ф┴╬Е┬╟ e , Д╨╓Ф█╒Е┘╤Е░▌Г╩╖Х┼┌Г┌╧О╪⌡ 
		if(l.data[mid] == e && mid != l.length - 1){
			ElementType temp = l.data[mid];
			l.data[mid] = l.data[mid + 1];
			l.data[mid+1] = temp;
			break;
		} else if(l.data[mid] > e){
			// Е╥╕Е█┼И┐╗Е┬├Ф÷╔Ф┴╬ 
			right = mid - 1;
		} else {
			// Е▐ЁЕ█┼И┐╗Е┬├Ф÷╔Ф┴╬ 
			left = mid + 1;
		}	
	}
	// Ф╡║Ф°┴Ф┴╬Е┬╟Е╟╠Ф▐▓Е┘╔ 
	if(left > right){
		int i;
		for(i = l.length - 1; i > right; i--){
			l.data[i + 1] = l.data[i];
		}
		l.data[i + 1] = e;
		l.length++;
	}
} 

/*
 * 10.(2010Г╩÷Х─┐Г°÷И╒≤) Х╝╬Е╟├ n (n > 1)Д╦╙Ф∙╢Ф∙╟Е╜≤Ф■╬Е┬╟Д╦─Г╩╢Ф∙╟Г╩└ R Д╦╜, Х╝╬Х╝║Д╦─Д╦╙Е°╗Ф≈╤И≈╢Е▓▄
 *   Г╘╨И≈╢Д╦╓Д╦╙Ф√╧И²╒И┐╫Е╟╫Е▐╞Х┐╫И╚≤Ф∙┬Г └Г╝≈ФЁ∙Ц─┌Е╟├ R Д╦╜Д©²Е╜≤Г └Е╨▐Е┬≈Е╬╙Г▌╞Е╥╕Г╖╩ p (0 < p < n)Д╦╙Д╫█Г╫╝   
 *  Д╦▌Г╛╛Е┘╚И╒≤Д╦─Ф═╥О╪▄Е┘┬Ф∙╢Д╫⌠И─├Г╫╝О╪▄Г└╤Е░▌Е├█Е╠─И┐╗И─├Г╫╝Ц─┌Ф≈╤И≈╢Е╓█Ф²┌Е╨╕ O(n), Г╘╨И≈╢Е╓█Ф²┌Е╨╕ O(1); 
 */ 

/*
 * 11.(2011Г╩÷Х─┐Г°÷И╒≤) Д╦─Д╦╙И∙©Е╨╕Д╦╨ L (L >= 1) Г └Е█┤Е╨▐Е╨▐Е┬≈ SО╪▄Е╓└Е°╗Г╛╛[L / 2]Д╦╙Д╫█Г╫╝Г └Ф∙╟Г╖╟Д╦╨ S Г └Д╦╜Д╫█Ф∙╟Ц─┌
 * Г▌╟Ф°┴Д╦╓Д╦╙Г╜┴И∙©Е█┤Е╨▐Е╨▐Е┬≈ A Е▓▄ BО╪▄Х╝╬Х╝║Д╦─Д╦╙Е°╗Ф≈╤И≈╢Е▓▄Г╘╨И≈╢Д╦╓Д╦╙Ф√╧И²╒И┐╫Е╟╫Е▐╞Х┐╫И╚≤Ф∙┬Г └Г╝≈ФЁ∙Ф┴╬Е┤╨AЕ▓▄BГ └Д╦╜Д╫█Ф∙╟Ц─┌ 
 */ 

//Ф≈╤И≈╢Е╓█Ф²┌Е╨╕ O(n), Г╘╨И≈╢Е╓█Ф²┌Е╨╕ O(1);  
int findMid_1(int a[], int b[], int length){
	int i = 0;
	int j = 0;
	int mid;
	// И│█Е▌├Д╦╓Д╦╙Е╨▐Е┬≈О╪▄Е▐╙И°─Х╕│И│█Е▌├Е╨▐Е┬≈И∙©Е╨╕Е╟╠Е▐╞Д╩╔Ф┴╬Е┬╟О╪⌡ 
	while(length--){
		if(a[i] < b[j]){
			mid = a[i];
			i++;			
		} else {
			mid = b[j];
			j++;
		}	
	}
	return mid;
} 

<<<<<<< HEAD
// й╠╪Д╦╢тс╤х O(logN),©у╪Д╦╢тс╤х O(1) 
=======
// Ф≈╤И≈╢Е╓█Ф²┌Е╨╕ O(logN),Г╘╨И≈╢Е╓█Ф²┌Е╨╕ O(1) 
>>>>>>> 271f74c0f61decb92149b7b746521d566fcf5f75
int findMid_2(int a[], int b[], int length){
	int s1 = 0, d1 = length - 1;
	int s2 = 0, d2 = length - 1;
	int mid1, mid2;
	while(s1 != d1 || s2 != d2){
		mid1 = (s1 + d1) / 2;
		mid2 = (s2 + d2) / 2;
		if(a[mid1] == b[mid2]){
			return a[mid1];
		}
		
<<<<<<< HEAD
		// иАфЗгЬ╪Дй╠ё╛╠ёЁж╤тЁфё╩ 
		if(a[mid1] < b[mid2]){
			if((s1 + d1) % 2 == 0){ // т╙кь╦ЖйЩн╙фФйЩ (0+4) 
=======
		// Х┬█Е╪┐Е▄╨И≈╢Ф≈╤О╪▄Д©²Ф▄│Е╞╧Г╖╟О╪⌡ 
		if(a[mid1] < b[mid2]){
			if((s1 + d1) % 2 == 0){ // Е┘┐Г╢═Д╦╙Ф∙╟Д╦╨Е╔┤Ф∙╟ (0+4) 
>>>>>>> 271f74c0f61decb92149b7b746521d566fcf5f75
				s1 = mid1;
				d2 = mid2;
			} else {   
				s1 = mid1 + 1;
				d2 = mid2;	
			}
<<<<<<< HEAD
		} else {
			if((s2 + d2) % 2 == 0){
				s2 = mid2;
				d1 = mid1;
			} else {
				s2 = mid2 + 1;
				d1 = mid1;	
			}
		}
	}
	return a[s1] < b[s2] ? a[s1] : b[s2]; // вН╨Сж╩йёр╩╦Жё╛дд╦Жп║╬мйгжпн╩йЩ 
} 

/*
 * 12. ряж╙р╩╦ЖуШйЩпРап A = (a0,a1,...,an-1),фДжп 0 <= ai < n(0 <= i < n). 
 *     я╟уржВт╙кьё╨тзпРапжпЁЖожЁ╛╧Щ╟КйЩ╣дйЩё╩ 
 *     A = (0,5,5,3,5,1,5,7) тР 5 йгжВт╙кьё╩ 
 */ 
// Ё╛╧Щ╟КйЩ╣дт╙кьё╛юЩхГ 8 ╦Жт╙кьё╛жВт╙кьр╙ЁЖож╢Ссз 4 ╢нё╛╪╢жаиыЁЖож 5 ╢нё╩
// ╟к╦Ж©ун╩╥жЁикд╥щё╛оЮ╣╠сзжаиы5╦ЖгР╥е╣╫кд╦Жм╟ё╛жаиыспр╩╦ЖюОцФспа╫╦Жё╩ 
int findMain(int A[], int n){
	int i;
	int m = A[0]; // охя║х║╣зр╩╦ЖвВн╙жВт╙кь
	int count = 1;   // ╪гб╪жВт╙кьЁЖож╣д╢нйЩ
	
	// я╟ур©идэ╢Фтз╣джВт╙кь;й╠╪Д╦╢тс╤х O(n) 
	for(i = 1; i < n; i++){
		if(A[i] == m){
			count++; // ╪фйЩжВт╙кь 
		} else {
			if(count > 0){      
				count--;
			} else { // ╦Э╩╩т╙кь 
				m = A[i];
				count = 1;
			}
		}
	}
	// жьпбмЁ╪фЁЖож╣д╢нйЩё╛йг╥Я╢Ссз n/2;й╠╪Д╦╢тс╤х O(n); 
	if(count > 0){
		for(i = count = 0; i < n; i++){
			if(A[i] == m){
				count++;
			}
		}
	}
	if(count > n / 2)
		return m;
	return -1;
} 

/*
 * 13. ╦Ь╤╗р╩╦Ж╨╛ n(n >= 1) ╦ЖуШйЩ╣дйЩвИё╛гКиХ╪фр╩╦Жтзй╠╪Дио╬║©идэ╦ъп╖╣дкЦ╥╗ё╛урЁЖйЩвИжпн╢ЁЖож╣двНп║уЩуШйЩ║ё 
 */ 
int findMinInterger(int A[], int n){
	int *B = new int[n]; // сцBйЩвИ╠Й╪гйг╥ЯЁЖож; 
	// int* B = (int *)malloc(sizeof(int)*n); 
	int i;
	
	// memset(B,0,sizeof(int)*n)©иртсцуБ╦Ж╦Ёж╣ 
	for(i = 0; i < n; i++){
		B[i] = 0; // х╚╡©╦ЁЁУй╪ж╣н╙ 0; 
	}
	// ╠ИюЗя╟урйг╥ЯЁЖож 
=======
		} else {
			if((s2 + d2) % 2 == 0){
				s2 = mid2;
				d1 = mid1;
			} else {
				s2 = mid2 + 1;
				d1 = mid1;	
			}
		}
	}
	return a[s1] < b[s2] ? a[s1] : b[s2]; // Ф°─Е░▌Е▐╙Е┴╘Д╦─Д╦╙О╪▄Е⌠╙Д╦╙Е╟▐Е╟╠Ф≤╞Д╦╜Д╫█Ф∙╟ 
} 

/*
 * 12. Е╥╡Г÷╔Д╦─Д╦╙Ф∙╢Ф∙╟Е╨▐Е┬≈ A = (a0,a1,...,an-1),Е┘╤Д╦╜ 0 <= ai < n(0 <= i < n). 
 *     Е╞╩Ф┴╬Д╦╩Е┘┐Г╢═О╪ Е°╗Е╨▐Е┬≈Д╦╜Е┤╨Г▌╟Х╤┘Х©┤Е█┼Ф∙╟Г └Ф∙╟О╪⌡ 
 *     A = (0,5,5,3,5,1,5,7) Е┬≥ 5 Ф≤╞Д╦╩Е┘┐Г╢═О╪⌡ 
 */ 
// Х╤┘Х©┤Е█┼Ф∙╟Г └Е┘┐Г╢═О╪▄Д╬▀Е╕┌ 8 Д╦╙Е┘┐Г╢═О╪▄Д╦╩Е┘┐Г╢═Х╕│Е┤╨Г▌╟Е╓╖Д╨▌ 4 Ф╛║О╪▄Е█ЁХ┤ЁЕ╟▒Е┤╨Г▌╟ 5 Ф╛║О╪⌡
// Е┘╚Д╦╙Г╘╨Д╫█Е┬├Ф┬░Е⌡⌡Д╩╫О╪▄Г⌡╦Е╫⌠Д╨▌Х┤ЁЕ╟▒5Д╦╙Г░┐Ф■╬Е┬╟Е⌡⌡Д╦╙Ф║╤О╪▄Х┤ЁЕ╟▒Ф°┴Д╦─Д╦╙И┤▄И²╒Ф°┴Д╦╓Д╦╙О╪⌡ 
int findMain(int A[], int n){
	int i;
	int m = A[0]; // Е┘┬И─┴Е▐√Г╛╛Д╦─Д╦╙Д╫°Д╦╨Д╦╩Е┘┐Г╢═
	int count = 1;   // Х╝╟Е╫∙Д╦╩Е┘┐Г╢═Е┤╨Г▌╟Г └Ф╛║Ф∙╟
	
	// Е╞╩Ф┴╬Е▐╞Х┐╫Е╜≤Е°╗Г └Д╦╩Е┘┐Г╢═;Ф≈╤И≈╢Е╓█Ф²┌Е╨╕ O(n) 
	for(i = 1; i < n; i++){
		if(A[i] == m){
			count++; // Х╝║Ф∙╟Д╦╩Е┘┐Г╢═ 
		} else {
			if(count > 0){      
				count--;
			} else { // Ф⌡╢Ф█╒Е┘┐Г╢═ 
				m = A[i];
				count = 1;
			}
		}
	}
	// И┤█Ф√╟Г╩÷Х╝║Е┤╨Г▌╟Г └Ф╛║Ф∙╟О╪▄Ф≤╞Е░╕Е╓╖Д╨▌ n/2;Ф≈╤И≈╢Е╓█Ф²┌Е╨╕ O(n); 
	if(count > 0){
		for(i = count = 0; i < n; i++){
			if(A[i] == m){
				count++;
			}
		}
	}
	if(count > n / 2)
		return m;
	return -1;
} 

/*
 * 13. Г╩≥Е╝ Д╦─Д╦╙Е░╚ n(n >= 1) Д╦╙Ф∙╢Ф∙╟Г └Ф∙╟Г╩└О╪▄Х╞╥Х╝╬Х╝║Д╦─Д╦╙Е°╗Ф≈╤И≈╢Д╦┼Е╟╫Е▐╞Х┐╫И╚≤Ф∙┬Г └Г╝≈ФЁ∙О╪▄Ф┴╬Е┤╨Ф∙╟Г╩└Д╦╜Ф°╙Е┤╨Г▌╟Г └Ф°─Е╟▐Ф╜ёФ∙╢Ф∙╟Ц─┌ 
 */ 
int findMinInterger(int A[], int n){
	int *B = new int[n]; // Г■╗BФ∙╟Г╩└Ф═┤Х╝╟Ф≤╞Е░╕Е┤╨Г▌╟; 
	// int* B = (int *)malloc(sizeof(int)*n); 
	int i;
	
	// memset(B,0,sizeof(int)*n)Е▐╞Д╩╔Г■╗Х©≥Д╦╙Х╣▀Е─╪ 
	for(i = 0; i < n; i++){
		B[i] = 0; // Е┘╗И┐╗Х╣▀Е┬²Е╖▀Е─╪Д╦╨ 0; 
	}
	// И│█Е▌├Е╞╩Ф┴╬Ф≤╞Е░╕Е┤╨Г▌╟ 
>>>>>>> 271f74c0f61decb92149b7b746521d566fcf5f75
	for(i = 0; i < n; i++){
		if(A[i] > 0 && A[i] <= n){
			B[A[i] - 1] = 1;
		}
	}
<<<<<<< HEAD
	// я╟урн╢ЁЖож╣ддг╦ЖуЩуШйЩ; 
=======
	// Е╞╩Ф┴╬Ф°╙Е┤╨Г▌╟Г └И┌ёД╦╙Ф╜ёФ∙╢Ф∙╟; 
>>>>>>> 271f74c0f61decb92149b7b746521d566fcf5f75
	for(i = 0; i < n; i++){
		if(B[i] == 0){
			break;
		}
	}
<<<<<<< HEAD
	// хТур╣╫акё╛тР i ╠Мй╬╣дйг A[i] - 1, ╥╣╩ь i + 1; 
	// хТц╩спур╣╫ё╛тР i = n ╥╣╩ьвНп║уЩуШйЩйг n + 1; 
=======
	// Х▀╔Ф┴╬Е┬╟Д╨├О╪▄Е┬≥ i Х║╗Г╓╨Г └Ф≤╞ A[i] - 1, Х©■Е⌡· i + 1; 
	// Х▀╔Ф╡║Ф°┴Ф┴╬Е┬╟О╪▄Е┬≥ i = n Х©■Е⌡·Ф°─Е╟▐Ф╜ёФ∙╢Ф∙╟Ф≤╞ n + 1; 
>>>>>>> 271f74c0f61decb92149b7b746521d566fcf5f75
	return i + 1; 
}

int main(){
	SeqList l;
	InitList(l);
	int num[10] = {1,2,3,4,5,6,7,8,9,10};
	for(int i = 0; i < 10; i++){
		InsertToList(l, i + 1, num[i]);	
	}
	findX(l, 14);
	TraverseSeqList(l);
	int a[5] = {1,13,15,17,19};
	int b[5] = {2,4,6,8,11};
	cout << findMinInterger(a, 5) << endl; 
}
